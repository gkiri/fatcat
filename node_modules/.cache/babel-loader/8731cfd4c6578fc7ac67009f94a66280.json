{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletProvider = void 0;\n\nconst wallet_adapter_base_1 = require(\"@solana/wallet-adapter-base\");\n\nconst react_1 = __importStar(require(\"react\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst useLocalStorage_1 = require(\"./useLocalStorage\");\n\nconst useWallet_1 = require(\"./useWallet\");\n\nconst initialState = {\n  wallet: null,\n  adapter: null,\n  ready: false,\n  publicKey: null,\n  connected: false,\n  autoApprove: false\n};\n\nconst WalletProvider = ({\n  children,\n  wallets,\n  autoConnect = false,\n  onError = error => console.error(error),\n  localStorageKey = 'walletName'\n}) => {\n  const [name, setName] = (0, useLocalStorage_1.useLocalStorage)(localStorageKey, null);\n  const [{\n    wallet,\n    adapter,\n    ready,\n    publicKey,\n    connected,\n    autoApprove\n  }, setState] = (0, react_1.useState)(initialState);\n  const [connecting, setConnecting] = (0, react_1.useState)(false);\n  const [disconnecting, setDisconnecting] = (0, react_1.useState)(false); // Map of wallet names to wallets\n\n  const walletsByName = (0, react_1.useMemo)(() => wallets.reduce((walletsByName, wallet) => {\n    walletsByName[wallet.name] = wallet;\n    return walletsByName;\n  }, {}), [wallets]); // When the selected wallet changes, initialize the state\n\n  (0, react_1.useEffect)(() => {\n    const wallet = name && walletsByName[name];\n    const adapter = wallet && wallet.adapter();\n\n    if (adapter) {\n      const {\n        ready,\n        publicKey,\n        connected,\n        autoApprove\n      } = adapter;\n      setState({\n        wallet,\n        adapter,\n        connected,\n        publicKey,\n        ready,\n        autoApprove\n      });\n    } else {\n      setState(initialState);\n    }\n  }, [name, walletsByName, setState]); // If autoConnect is enabled, try to connect when the adapter changes and is ready\n\n  (0, react_1.useEffect)(() => {\n    if (autoConnect && adapter && ready && !connecting && !connected) {\n      (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n          setConnecting(true);\n\n          try {\n            yield adapter.connect();\n          } catch (error) {\n            // Clear the selected wallet\n            setName(null); // Don't throw error, but onError will still be called\n          } finally {\n            setConnecting(false);\n          }\n        });\n      })();\n    }\n  }, [autoConnect, adapter, ready, connecting, connected, setConnecting, setName]); // Reset the state\n\n  const reset = (0, react_1.useCallback)(() => {\n    setConnecting(false);\n    setDisconnecting(false);\n    setState(initialState);\n  }, [setConnecting, setDisconnecting, setState]); // Select a wallet by name\n\n  const select = (0, react_1.useCallback)(newName => __awaiter(void 0, void 0, void 0, function* () {\n    if (name === newName) return;\n    if (adapter) yield adapter.disconnect();\n    setName(newName);\n  }), [name, adapter, setName]); // Handle the adapter's ready event\n\n  const onReady = (0, react_1.useCallback)(() => setState(state => Object.assign(Object.assign({}, state), {\n    ready: true\n  })), [setState]); // Handle the adapter's connect event\n\n  const onConnect = (0, react_1.useCallback)(() => {\n    if (!adapter) return;\n    const {\n      connected,\n      publicKey,\n      ready,\n      autoApprove\n    } = adapter;\n    setState(state => Object.assign(Object.assign({}, state), {\n      connected,\n      publicKey,\n      ready,\n      autoApprove\n    }));\n  }, [adapter, setState]); // Handle the adapter's disconnect event\n\n  const onDisconnect = (0, react_1.useCallback)(() => reset(), [reset]); // Connect the adapter to the wallet\n\n  const connect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (connecting || disconnecting || connected) return;\n\n    if (!wallet || !adapter) {\n      const error = new errors_1.WalletNotSelectedError();\n      onError(error);\n      throw error;\n    }\n\n    if (!ready) {\n      setName(null);\n\n      if (typeof window !== 'undefined') {\n        window.open(wallet.url, '_blank');\n      }\n\n      const error = new wallet_adapter_base_1.WalletNotReadyError();\n      onError(error);\n      throw error;\n    }\n\n    setConnecting(true);\n\n    try {\n      yield adapter.connect();\n    } catch (error) {\n      setName(null);\n      throw error;\n    } finally {\n      setConnecting(false);\n    }\n  }), [connecting, disconnecting, connected, wallet, adapter, onError, ready, setName, setConnecting]); // Disconnect the adapter from the wallet\n\n  const disconnect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (disconnecting) return;\n    if (!adapter) return setName(null);\n    setDisconnecting(true);\n\n    try {\n      yield adapter.disconnect();\n    } finally {\n      setName(null);\n      setDisconnecting(false);\n    }\n  }), [disconnecting, adapter, setName, setDisconnecting]); // Send a transaction using the provided connection\n\n  const sendTransaction = (0, react_1.useCallback)((transaction, connection, options) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!adapter) {\n      const error = new errors_1.WalletNotSelectedError();\n      onError(error);\n      throw error;\n    }\n\n    if (!connected) {\n      const error = new wallet_adapter_base_1.WalletNotConnectedError();\n      onError(error);\n      throw error;\n    }\n\n    return yield adapter.sendTransaction(transaction, connection, options);\n  }), [adapter, onError, connected]); // Sign a transaction if the wallet supports it\n\n  const signTransaction = (0, react_1.useMemo)(() => adapter && 'signTransaction' in adapter ? transaction => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) {\n      const error = new wallet_adapter_base_1.WalletNotConnectedError();\n      onError(error);\n      throw error;\n    }\n\n    return yield adapter.signTransaction(transaction);\n  }) : undefined, [adapter, onError, connected]); // Sign multiple transactions if the wallet supports it\n\n  const signAllTransactions = (0, react_1.useMemo)(() => adapter && 'signAllTransactions' in adapter ? transactions => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) {\n      const error = new wallet_adapter_base_1.WalletNotConnectedError();\n      onError(error);\n      throw error;\n    }\n\n    return yield adapter.signAllTransactions(transactions);\n  }) : undefined, [adapter, onError, connected]); // Sign an arbitrary message if the wallet supports it\n\n  const signMessage = (0, react_1.useMemo)(() => adapter && 'signMessage' in adapter ? message => __awaiter(void 0, void 0, void 0, function* () {\n    if (!connected) {\n      const error = new wallet_adapter_base_1.WalletNotConnectedError();\n      onError(error);\n      throw error;\n    }\n\n    return yield adapter.signMessage(message);\n  }) : undefined, [adapter, onError, connected]); // Setup and teardown event listeners when the adapter changes\n\n  (0, react_1.useEffect)(() => {\n    if (adapter) {\n      adapter.on('ready', onReady);\n      adapter.on('connect', onConnect);\n      adapter.on('disconnect', onDisconnect);\n      adapter.on('error', onError);\n      return () => {\n        adapter.off('ready', onReady);\n        adapter.off('connect', onConnect);\n        adapter.off('disconnect', onDisconnect);\n        adapter.off('error', onError);\n      };\n    }\n  }, [adapter, onReady, onConnect, onDisconnect, onError]);\n  return react_1.default.createElement(useWallet_1.WalletContext.Provider, {\n    value: {\n      wallets,\n      autoConnect,\n      select,\n      wallet,\n      adapter,\n      publicKey,\n      ready,\n      connecting,\n      disconnecting,\n      connected,\n      autoApprove,\n      connect,\n      disconnect,\n      sendTransaction,\n      signTransaction,\n      signAllTransactions,\n      signMessage\n    }\n  }, children);\n};\n\nexports.WalletProvider = WalletProvider;","map":{"version":3,"sources":["../src/WalletProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletProvider = void 0;\nconst wallet_adapter_base_1 = require(\"@solana/wallet-adapter-base\");\nconst react_1 = __importStar(require(\"react\"));\nconst errors_1 = require(\"./errors\");\nconst useLocalStorage_1 = require(\"./useLocalStorage\");\nconst useWallet_1 = require(\"./useWallet\");\nconst initialState = {\n    wallet: null,\n    adapter: null,\n    ready: false,\n    publicKey: null,\n    connected: false,\n    autoApprove: false,\n};\nconst WalletProvider = ({ children, wallets, autoConnect = false, onError = (error) => console.error(error), localStorageKey = 'walletName', }) => {\n    const [name, setName] = (0, useLocalStorage_1.useLocalStorage)(localStorageKey, null);\n    const [{ wallet, adapter, ready, publicKey, connected, autoApprove }, setState] = (0, react_1.useState)(initialState);\n    const [connecting, setConnecting] = (0, react_1.useState)(false);\n    const [disconnecting, setDisconnecting] = (0, react_1.useState)(false);\n    // Map of wallet names to wallets\n    const walletsByName = (0, react_1.useMemo)(() => wallets.reduce((walletsByName, wallet) => {\n        walletsByName[wallet.name] = wallet;\n        return walletsByName;\n    }, {}), [wallets]);\n    // When the selected wallet changes, initialize the state\n    (0, react_1.useEffect)(() => {\n        const wallet = name && walletsByName[name];\n        const adapter = wallet && wallet.adapter();\n        if (adapter) {\n            const { ready, publicKey, connected, autoApprove } = adapter;\n            setState({ wallet, adapter, connected, publicKey, ready, autoApprove });\n        }\n        else {\n            setState(initialState);\n        }\n    }, [name, walletsByName, setState]);\n    // If autoConnect is enabled, try to connect when the adapter changes and is ready\n    (0, react_1.useEffect)(() => {\n        if (autoConnect && adapter && ready && !connecting && !connected) {\n            (function () {\n                return __awaiter(this, void 0, void 0, function* () {\n                    setConnecting(true);\n                    try {\n                        yield adapter.connect();\n                    }\n                    catch (error) {\n                        // Clear the selected wallet\n                        setName(null);\n                        // Don't throw error, but onError will still be called\n                    }\n                    finally {\n                        setConnecting(false);\n                    }\n                });\n            })();\n        }\n    }, [autoConnect, adapter, ready, connecting, connected, setConnecting, setName]);\n    // Reset the state\n    const reset = (0, react_1.useCallback)(() => {\n        setConnecting(false);\n        setDisconnecting(false);\n        setState(initialState);\n    }, [setConnecting, setDisconnecting, setState]);\n    // Select a wallet by name\n    const select = (0, react_1.useCallback)((newName) => __awaiter(void 0, void 0, void 0, function* () {\n        if (name === newName)\n            return;\n        if (adapter)\n            yield adapter.disconnect();\n        setName(newName);\n    }), [name, adapter, setName]);\n    // Handle the adapter's ready event\n    const onReady = (0, react_1.useCallback)(() => setState((state) => (Object.assign(Object.assign({}, state), { ready: true }))), [setState]);\n    // Handle the adapter's connect event\n    const onConnect = (0, react_1.useCallback)(() => {\n        if (!adapter)\n            return;\n        const { connected, publicKey, ready, autoApprove } = adapter;\n        setState((state) => (Object.assign(Object.assign({}, state), { connected,\n            publicKey,\n            ready,\n            autoApprove })));\n    }, [adapter, setState]);\n    // Handle the adapter's disconnect event\n    const onDisconnect = (0, react_1.useCallback)(() => reset(), [reset]);\n    // Connect the adapter to the wallet\n    const connect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (connecting || disconnecting || connected)\n            return;\n        if (!wallet || !adapter) {\n            const error = new errors_1.WalletNotSelectedError();\n            onError(error);\n            throw error;\n        }\n        if (!ready) {\n            setName(null);\n            if (typeof window !== 'undefined') {\n                window.open(wallet.url, '_blank');\n            }\n            const error = new wallet_adapter_base_1.WalletNotReadyError();\n            onError(error);\n            throw error;\n        }\n        setConnecting(true);\n        try {\n            yield adapter.connect();\n        }\n        catch (error) {\n            setName(null);\n            throw error;\n        }\n        finally {\n            setConnecting(false);\n        }\n    }), [connecting, disconnecting, connected, wallet, adapter, onError, ready, setName, setConnecting]);\n    // Disconnect the adapter from the wallet\n    const disconnect = (0, react_1.useCallback)(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (disconnecting)\n            return;\n        if (!adapter)\n            return setName(null);\n        setDisconnecting(true);\n        try {\n            yield adapter.disconnect();\n        }\n        finally {\n            setName(null);\n            setDisconnecting(false);\n        }\n    }), [disconnecting, adapter, setName, setDisconnecting]);\n    // Send a transaction using the provided connection\n    const sendTransaction = (0, react_1.useCallback)((transaction, connection, options) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!adapter) {\n            const error = new errors_1.WalletNotSelectedError();\n            onError(error);\n            throw error;\n        }\n        if (!connected) {\n            const error = new wallet_adapter_base_1.WalletNotConnectedError();\n            onError(error);\n            throw error;\n        }\n        return yield adapter.sendTransaction(transaction, connection, options);\n    }), [adapter, onError, connected]);\n    // Sign a transaction if the wallet supports it\n    const signTransaction = (0, react_1.useMemo)(() => adapter && 'signTransaction' in adapter\n        ? (transaction) => __awaiter(void 0, void 0, void 0, function* () {\n            if (!connected) {\n                const error = new wallet_adapter_base_1.WalletNotConnectedError();\n                onError(error);\n                throw error;\n            }\n            return yield adapter.signTransaction(transaction);\n        })\n        : undefined, [adapter, onError, connected]);\n    // Sign multiple transactions if the wallet supports it\n    const signAllTransactions = (0, react_1.useMemo)(() => adapter && 'signAllTransactions' in adapter\n        ? (transactions) => __awaiter(void 0, void 0, void 0, function* () {\n            if (!connected) {\n                const error = new wallet_adapter_base_1.WalletNotConnectedError();\n                onError(error);\n                throw error;\n            }\n            return yield adapter.signAllTransactions(transactions);\n        })\n        : undefined, [adapter, onError, connected]);\n    // Sign an arbitrary message if the wallet supports it\n    const signMessage = (0, react_1.useMemo)(() => adapter && 'signMessage' in adapter\n        ? (message) => __awaiter(void 0, void 0, void 0, function* () {\n            if (!connected) {\n                const error = new wallet_adapter_base_1.WalletNotConnectedError();\n                onError(error);\n                throw error;\n            }\n            return yield adapter.signMessage(message);\n        })\n        : undefined, [adapter, onError, connected]);\n    // Setup and teardown event listeners when the adapter changes\n    (0, react_1.useEffect)(() => {\n        if (adapter) {\n            adapter.on('ready', onReady);\n            adapter.on('connect', onConnect);\n            adapter.on('disconnect', onDisconnect);\n            adapter.on('error', onError);\n            return () => {\n                adapter.off('ready', onReady);\n                adapter.off('connect', onConnect);\n                adapter.off('disconnect', onDisconnect);\n                adapter.off('error', onError);\n            };\n        }\n    }, [adapter, onReady, onConnect, onDisconnect, onError]);\n    return (react_1.default.createElement(useWallet_1.WalletContext.Provider, { value: {\n            wallets,\n            autoConnect,\n            select,\n            wallet,\n            adapter,\n            publicKey,\n            ready,\n            connecting,\n            disconnecting,\n            connected,\n            autoApprove,\n            connect,\n            disconnect,\n            sendTransaction,\n            signTransaction,\n            signAllTransactions,\n            signMessage,\n        } }, children));\n};\nexports.WalletProvider = WalletProvider;\n//# sourceMappingURL=WalletProvider.js.map"]},"metadata":{},"sourceType":"script"}