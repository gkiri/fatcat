{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolletWalletAdapter = void 0;\n\nconst sol_wallet_adapter_1 = __importDefault(require(\"@project-serum/sol-wallet-adapter\"));\n\nconst wallet_adapter_base_1 = require(\"@solana/wallet-adapter-base\");\n\nclass SolletWalletAdapter extends wallet_adapter_base_1.BaseSignerWalletAdapter {\n  constructor(config = {}) {\n    super();\n\n    this._disconnected = () => {\n      const wallet = this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', this._disconnected);\n        this._wallet = null;\n        this.emit('error', new wallet_adapter_base_1.WalletDisconnectedError());\n        this.emit('disconnect');\n      }\n    };\n\n    this._provider = config.provider || 'https://www.sollet.io';\n    this._network = config.network || wallet_adapter_base_1.WalletAdapterNetwork.Mainnet;\n    this._connecting = false;\n    this._wallet = null;\n  }\n\n  get publicKey() {\n    var _a;\n\n    return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n  }\n\n  get ready() {\n    // @FIXME\n    return typeof window !== 'undefined';\n  }\n\n  get connecting() {\n    return this._connecting;\n  }\n\n  get connected() {\n    var _a;\n\n    return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n  }\n\n  get autoApprove() {\n    var _a;\n\n    return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.autoApprove);\n  }\n\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        if (this.connected || this.connecting) return;\n        this._connecting = true;\n        let wallet;\n        let interval;\n\n        try {\n          wallet = new sol_wallet_adapter_1.default(this._provider, this._network); // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup is closed or blocked\n\n          yield new Promise((resolve, reject) => {\n            wallet.connect().then(resolve, reject);\n\n            if (typeof this._provider === 'string') {\n              let count = 0;\n              interval = setInterval(() => {\n                const popup = wallet._popup;\n\n                if (popup) {\n                  if (popup.closed) reject(new wallet_adapter_base_1.WalletWindowClosedError());\n                } else {\n                  if (count > 50) reject(new wallet_adapter_base_1.WalletWindowBlockedError());\n                }\n\n                count++;\n              }, 100);\n            }\n          });\n        } catch (error) {\n          throw new wallet_adapter_base_1.WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n        } finally {\n          if (interval) clearInterval(interval);\n        }\n\n        wallet.on('disconnect', this._disconnected);\n        this._wallet = wallet;\n        this.emit('connect');\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      } finally {\n        this._connecting = false;\n      }\n    });\n  }\n\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const wallet = this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', this._disconnected);\n        this._wallet = null;\n\n        try {\n          yield wallet.disconnect();\n        } catch (error) {\n          this.emit('error', new wallet_adapter_base_1.WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n        }\n\n        this.emit('disconnect');\n      }\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const wallet = this._wallet;\n        if (!wallet) throw new wallet_adapter_base_1.WalletNotConnectedError();\n\n        try {\n          return yield wallet.signTransaction(transaction);\n        } catch (error) {\n          throw new wallet_adapter_base_1.WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      }\n    });\n  }\n\n  signAllTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const wallet = this._wallet;\n        if (!wallet) throw new wallet_adapter_base_1.WalletNotConnectedError();\n\n        try {\n          return yield wallet.signAllTransactions(transactions);\n        } catch (error) {\n          throw new wallet_adapter_base_1.WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n        }\n      } catch (error) {\n        this.emit('error', error);\n        throw error;\n      }\n    });\n  }\n\n}\n\nexports.SolletWalletAdapter = SolletWalletAdapter;","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolletWalletAdapter = void 0;\nconst sol_wallet_adapter_1 = __importDefault(require(\"@project-serum/sol-wallet-adapter\"));\nconst wallet_adapter_base_1 = require(\"@solana/wallet-adapter-base\");\nclass SolletWalletAdapter extends wallet_adapter_base_1.BaseSignerWalletAdapter {\n    constructor(config = {}) {\n        super();\n        this._disconnected = () => {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this.emit('error', new wallet_adapter_base_1.WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._provider = config.provider || 'https://www.sollet.io';\n        this._network = config.network || wallet_adapter_base_1.WalletAdapterNetwork.Mainnet;\n        this._connecting = false;\n        this._wallet = null;\n    }\n    get publicKey() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n    get ready() {\n        // @FIXME\n        return typeof window !== 'undefined';\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n    get autoApprove() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.autoApprove);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                let wallet;\n                let interval;\n                try {\n                    wallet = new sol_wallet_adapter_1.default(this._provider, this._network);\n                    // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup is closed or blocked\n                    yield new Promise((resolve, reject) => {\n                        wallet.connect().then(resolve, reject);\n                        if (typeof this._provider === 'string') {\n                            let count = 0;\n                            interval = setInterval(() => {\n                                const popup = wallet._popup;\n                                if (popup) {\n                                    if (popup.closed)\n                                        reject(new wallet_adapter_base_1.WalletWindowClosedError());\n                                }\n                                else {\n                                    if (count > 50)\n                                        reject(new wallet_adapter_base_1.WalletWindowBlockedError());\n                                }\n                                count++;\n                            }, 100);\n                        }\n                    });\n                }\n                catch (error) {\n                    throw new wallet_adapter_base_1.WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                finally {\n                    if (interval)\n                        clearInterval(interval);\n                }\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                try {\n                    yield wallet.disconnect();\n                }\n                catch (error) {\n                    this.emit('error', new wallet_adapter_base_1.WalletDisconnectionError(error === null || error === void 0 ? void 0 : error.message, error));\n                }\n                this.emit('disconnect');\n            }\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new wallet_adapter_base_1.WalletNotConnectedError();\n                try {\n                    return yield wallet.signTransaction(transaction);\n                }\n                catch (error) {\n                    throw new wallet_adapter_base_1.WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new wallet_adapter_base_1.WalletNotConnectedError();\n                try {\n                    return yield wallet.signAllTransactions(transactions);\n                }\n                catch (error) {\n                    throw new wallet_adapter_base_1.WalletSignTransactionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\nexports.SolletWalletAdapter = SolletWalletAdapter;\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"script"}